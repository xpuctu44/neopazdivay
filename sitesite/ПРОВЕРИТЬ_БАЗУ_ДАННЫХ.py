#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import sqlite3
import os

def check_database():
    db_path = "neopazdivay/time_tracker.db"
    
    if not os.path.exists(db_path):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return
    
    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–π–¥–µ–Ω–∞!")
    print(f"üìÅ –ü—É—Ç—å: {db_path}")
    print(f"üìä –†–∞–∑–º–µ—Ä: {os.path.getsize(db_path)} –±–∞–π—Ç")
    print()
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table';")
        tables = cursor.fetchall()
        
        print("üìã –¢–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
        for table in tables:
            print(f"  - {table[0]}")
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        if ('users',) in tables:
            cursor.execute("SELECT id, email, full_name, role, is_active, created_at FROM users;")
            users = cursor.fetchall()
            
            print("üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
            if users:
                for user in users:
                    user_id, email, full_name, role, is_active, created_at = user
                    status = "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" if is_active else "‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"
                    print(f"  ID: {user_id}")
                    print(f"  Email: {email}")
                    print(f"  –ò–º—è: {full_name}")
                    print(f"  –†–æ–ª—å: {role}")
                    print(f"  –°—Ç–∞—Ç—É—Å: {status}")
                    print(f"  –°–æ–∑–¥–∞–Ω: {created_at}")
                    print("  " + "-" * 40)
            else:
                print("  ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞–≥–∞–∑–∏–Ω—ã
        if ('stores',) in tables:
            cursor.execute("SELECT id, name, address, phone FROM stores;")
            stores = cursor.fetchall()
            
            print("\nüè™ –ú–∞–≥–∞–∑–∏–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
            if stores:
                for store in stores:
                    store_id, name, address, phone = store
                    print(f"  ID: {store_id}")
                    print(f"  –ù–∞–∑–≤–∞–Ω–∏–µ: {name}")
                    print(f"  –ê–¥—Ä–µ—Å: {address}")
                    print(f"  –¢–µ–ª–µ—Ñ–æ–Ω: {phone}")
                    print("  " + "-" * 40)
            else:
                print("  ‚ùå –ú–∞–≥–∞–∑–∏–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–µ—â–µ–Ω–∏—è
        if ('attendances',) in tables:
            cursor.execute("SELECT COUNT(*) FROM attendances;")
            attendance_count = cursor.fetchone()[0]
            print(f"\n‚è∞ –ó–∞–ø–∏—Å–µ–π –æ –ø–æ—Å–µ—â–µ–Ω–∏—è—Ö: {attendance_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥—Ä–∞—Ñ–∏–∫
        if ('schedule_entries',) in tables:
            cursor.execute("SELECT COUNT(*) FROM schedule_entries;")
            schedule_count = cursor.fetchone()[0]
            print(f"üìÖ –ó–∞–ø–∏—Å–µ–π –≤ –≥—Ä–∞—Ñ–∏–∫–µ: {schedule_count}")
        
        conn.close()
        print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")

if __name__ == "__main__":
    check_database()

